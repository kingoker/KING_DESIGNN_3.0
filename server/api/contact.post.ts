import { defineEventHandler, readBody, createError } from 'h3'
import { createClient } from '@supabase/supabase-js'
import { useRuntimeConfig } from '#imports'
import { $fetch } from 'ofetch'

export default defineEventHandler(async (event) => {
  const { name, email, message } = await readBody(event)
  const config = useRuntimeConfig()

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Supabase
  const supabase = createClient(
    config.public.supabaseUrl,
    config.public.supabaseKey
  )

  // –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
  console.log('cfg:', {
    url:  config.public.supabaseUrl,
    key:  config.public.supabaseKey,
    bot:  config.telegramBotToken,
    chat: config.telegramChatId
  })

  // 1) –ó–∞–ø–∏—Å–∞—Ç—å –≤ Supabase
  const { error: dbError } = await supabase
    .from('contacts')
    .insert([{ name, email, message, created_at: new Date().toISOString() }])

  if (dbError) {
    throw createError({ statusCode: 500, statusMessage: dbError.message })
  }

  // 2) –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Telegram ‚Äî –æ—Ñ–æ—Ä–º–ª—è–µ–º –∫—Ä–∞—Å–∏–≤–æ —Å —ç–º–æ–¥–∂–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
  const timestamp = new Date().toLocaleString('ru-RU', { timeZone: 'America/New_York' })
  const telegramText = [
    'üíå *–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ KING DESIGNN* üíå',
    '\n',
    `üë§ *–ò–º—è:* _${name}_`,
    `‚úâÔ∏è *Email:* _${email}_`,
    `üïí *–í—Ä–µ–º—è:* _${timestamp}_`,
    '\n',
    '*üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:*',
    `${message}`,
    '\n',
    'üî• –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è! –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ. üî•'
  ].join('\n')

  try {
    await $fetch(`https://api.telegram.org/bot${config.telegramBotToken}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: {
        chat_id:    config.telegramChatId,
        text:       telegramText,
        parse_mode: 'Markdown'
      }
    })
  } catch (err) {
    console.error('Telegram send error:', err)
  }

  return { success: true }
})
